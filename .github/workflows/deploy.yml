name: CI/CD Pipeline

on:
  push:
    branches: [main]

  workflow_dispatch:

env:
  GO_VERSION: "1.21.5"
  BINARY_NAME: btwarch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
            -ldflags="-s -w" \
            -o ${{ env.BINARY_NAME }} \
            ./cmd/app/main.go

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        env:
          SSH_HOST: ${{ secrets.REMOTE_HOST }}
          SSH_USER: ${{ secrets.REMOTE_USER }}
        run: |
          ssh -i ~/.ssh/deploy_key $SSH_USER@$SSH_HOST "sudo systemctl stop btwarch || true"

          ssh -i ~/.ssh/deploy_key $SSH_USER@$SSH_HOST "mkdir -p ~/btwarch"
          scp -i ~/.ssh/deploy_key ${{ env.BINARY_NAME }} $SSH_USER@$SSH_HOST:~/btwarch/
          ssh -i ~/.ssh/deploy_key $SSH_USER@$SSH_HOST "mkdir -p ~/btwarch/database/migrations"
          scp -r -i ~/.ssh/deploy_key database/migrations/* $SSH_USER@$SSH_HOST:~/btwarch/database/migrations/

          ssh -i ~/.ssh/deploy_key $SSH_USER@$SSH_HOST "chmod +x ~/btwarch && sudo systemctl start btwarch"

          sleep 5
          ssh -i ~/.ssh/deploy_key $SSH_USER@$SSH_HOST "curl -sf http://localhost:8080/health || echo 'Health check failed'"

      - name: Cleanup SSH
        if: always()
        run: rm -f ~/.ssh/deploy_key

name: Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GO_VERSION: "1.24.4"
  BINARY_NAME: btwarch

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
            -ldflags="-s -w" \
            -o ${{ env.BINARY_NAME }}_linux_amd64 \
            ./cmd/app/main.go

      - name: Configure SSH and Deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          echo "Host $SSH_HOST" > ~/.ssh/config
          echo "  IdentityFile ~/.ssh/deploy_key" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

          ssh $SSH_USER@$SSH_HOST 'mkdir -p ~/btwarch/app/backups'
          ssh $SSH_USER@$SSH_HOST 'cp ~/btwarch/app/btwarch_linux_amd64 ~/btwarch/app/backups/btwarch_linux_amd64.backup.$(date +%Y%m%d_%H%M%S)' || true

          rsync -avz --progress ${{ env.BINARY_NAME }}_linux_amd64 $SSH_USER@$SSH_HOST:~/btwarch/app/
          ssh $SSH_USER@$SSH_HOST 'chmod +x ~/btwarch/app/btwarch_linux_amd64'
          ssh $SSH_USER@$SSH_HOST 'sudo systemctl restart btwarch && sudo systemctl reload nginx'
          ssh $SSH_USER@$SSH_HOST 'systemctl is-active btwarch && systemctl is-active nginx'

          rm -f ~/.ssh/deploy_key ~/.ssh/config
